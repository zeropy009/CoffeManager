/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Common.Constants;
import Common.Untils;
import Common.UserSession;
import DAO.Impl.WarehouseDetailImpl;
import DAO.WarehouseDetailDAO;
import Model.WarehouseDetail;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DZUNG
 */
public class InputWarehouse extends javax.swing.JPanel {

    private final WarehouseDetailDAO warehouseDetailDAO;
    private final DefaultTableModel modelTable;
    private ArrayList<WarehouseDetail> warehouseDetailList;
    
    /**
     * Creates new form InputWarehouse
     */
    public InputWarehouse() {
        warehouseDetailDAO = new WarehouseDetailImpl();
        warehouseDetailList = new ArrayList<>();
        initComponents();
        modelTable = (DefaultTableModel) tblWarehouseDetail.getModel();
        // Renderer để hiển thị JButton
        tblWarehouseDetail.getColumnModel().getColumn(4).setCellRenderer((JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -> (Component) value);
        // Tạo sự kiện khi SelectedRow của JTable thay đổi giá trị.
        tblWarehouseDetail.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tblWarehouseDetail.getSelectedRow();
                if (selectedRow == -1) {
                    txtProductName.setText(Constants.STR_EMPTY);
                    spnQuantity.setValue(1);
                    txtPrice.setText(Constants.STR_EMPTY);
                    lblAmount.setText("0");
                }
                else {
                    if (tblWarehouseDetail.getValueAt(selectedRow, 0) instanceof WarehouseDetail warehouseDetail) {
                        txtProductName.setText(warehouseDetail.getProductName());
                        spnQuantity.setValue(warehouseDetail.getQuantity());
                        txtPrice.setText(Untils.formatMoney(warehouseDetail.getPrice()));
                        lblAmount.setText(Untils.formatMoney(warehouseDetail.getAmount()));
                    }
                }
            }
        });
    }
    
    private int CalcAmount() {
        int quantity = Untils.parseToInt(spnQuantity.getValue().toString());
        int price = Untils.parseMoneyI(txtPrice.getText().trim());
        return quantity * price;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWarehouseDetail = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spnQuantity = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        lblUserFullName = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnSaveAndPrint = new javax.swing.JButton();
        lblTotalAmount = new javax.swing.JLabel();

        tblWarehouseDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Số lượng", "Đơn giá", "Thành tiền", "Xóa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblWarehouseDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblWarehouseDetailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblWarehouseDetail);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 255, 204));
        jLabel2.setText("Tên nhân viên:");

        txtProductName.setName("Tên sản phẩm"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("NHẬP KHO");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 204));
        jLabel3.setText("Tổng cộng:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 204));
        jLabel4.setText("Tên sản phẩm:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 255, 204));
        jLabel5.setText("Đơn giá:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 255, 204));
        jLabel6.setText("Số lượng:");

        spnQuantity.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));
        spnQuantity.setName("Số lượng"); // NOI18N
        spnQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQuantityStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 255, 204));
        jLabel7.setText("Thành tiền:");

        lblAmount.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAmount.setText("0");

        lblUserFullName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblUserFullName.setText("Nguyễn Văn A");

        txtPrice.setName("Đơn giá"); // NOI18N
        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPriceFocusLost(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add1.png"))); // NOI18N
        btnAdd.setText("Nhập");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSaveAndPrint.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnSaveAndPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/deposit.png"))); // NOI18N
        btnSaveAndPrint.setText("Lưu & In");
        btnSaveAndPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAndPrintActionPerformed(evt);
            }
        });

        lblTotalAmount.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTotalAmount.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSaveAndPrint)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblUserFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(132, 132, 132)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(409, 409, 409)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblUserFullName)
                    .addComponent(jLabel5)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(lblAmount))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblTotalAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnSaveAndPrint))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblUserFullName.setText(UserSession.getInstance().getFullName());
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!Untils.validateText(txtProductName)) {
            return;
        }
        int price = Untils.parseMoneyI(txtPrice.getText().trim());
        if (price <= 0) {
            JOptionPane.showMessageDialog(null, String.format("%s phải lớn hơn 0 !", txtPrice.getName()) , "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int quantity = (int) spnQuantity.getValue();
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(null, String.format("%s phải lớn hơn 0 !", spnQuantity.getName()) , "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String productName = txtProductName.getText().trim();
        int index = -1;
        for (int i = 0; i < warehouseDetailList.size(); i++) {
            WarehouseDetail warehouseDetail = warehouseDetailList.get(i);
            if (warehouseDetail.getProductName().equals(productName)) {
                index = i;
                warehouseDetail.setQuantity(quantity);
                warehouseDetail.setPrice(price);
                warehouseDetail.setAmount(quantity * price);
                break;
            }
        }
        if (index != -1) {
            tblWarehouseDetail.setValueAt(quantity, index, 1);
            tblWarehouseDetail.setValueAt(Untils.formatMoney(price), index, 2);
            tblWarehouseDetail.setValueAt(Untils.formatMoney(price * quantity), index, 3);
        } else {
            WarehouseDetail newWarehouseDetail = new WarehouseDetail(0, 0, productName, quantity, price, quantity * price);
            warehouseDetailList.add(newWarehouseDetail);
            Object[] row = new Object[4];
            row[0] = newWarehouseDetail;
            row[1] = quantity;
            row[2] = Untils.formatMoney(price);
            row[3] = Untils.formatMoney(quantity * price);
            row[4] = new JButton("Xóa");
            modelTable.addRow(row);
        }
        lblTotalAmount.setText(Untils.formatMoney(warehouseDetailList.stream().mapToInt(WarehouseDetail::getAmount).sum()));
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusGained
        String text = txtPrice.getText().trim();
        if (!text.isEmpty()) {
            txtPrice.setText(String.valueOf(Untils.parseMoneyI(text)));
        }
    }//GEN-LAST:event_txtPriceFocusGained

    private void txtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusLost
        String text = txtPrice.getText().trim();
        if (!text.isEmpty()) {
            int value = Untils.parseMoneyI(text);
            txtPrice.setText(Untils.formatMoney(value));
        }
        lblAmount.setText(Untils.formatMoney(CalcAmount()));
    }//GEN-LAST:event_txtPriceFocusLost

    private void spnQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQuantityStateChanged
        lblAmount.setText(Untils.formatMoney(CalcAmount()));
    }//GEN-LAST:event_spnQuantityStateChanged

    private void tblWarehouseDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblWarehouseDetailMouseClicked
        int selectedCol = tblWarehouseDetail.getSelectedColumn();
        int selectedRow = tblWarehouseDetail.getSelectedRow();
        if (selectedCol == 4 && selectedRow != -1) {
            if (JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa dữ liệu này không ?", "Xóa", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                modelTable.removeRow(selectedRow);
                warehouseDetailList.remove(selectedRow);
                txtProductName.setText(Constants.STR_EMPTY);
                spnQuantity.setValue(1);
                lblTotalAmount.setText(Untils.formatMoney(warehouseDetailList.stream().mapToInt(WarehouseDetail::getAmount).sum()));
            }
        }
    }//GEN-LAST:event_tblWarehouseDetailMouseClicked

    private void btnSaveAndPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAndPrintActionPerformed
        if (warehouseDetailDAO.addWarehouseDetails(warehouseDetailList)) {
            warehouseDetailList.clear();
            modelTable.setRowCount(0);
            txtProductName.setText(Constants.STR_EMPTY);
            spnQuantity.setValue(1);
            txtPrice.setText(Constants.STR_EMPTY);
            lblAmount.setText("0");
            lblTotalAmount.setText("0");
        }
    }//GEN-LAST:event_btnSaveAndPrintActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSaveAndPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblTotalAmount;
    private javax.swing.JLabel lblUserFullName;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTable tblWarehouseDetail;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables
}
